package group.skids.requiem.module.impl.exploits;

import group.skids.requiem.events.BoundingBoxEvent;
import group.skids.requiem.events.PushEvent;
import group.skids.requiem.events.UpdateEvent;
import group.skids.requiem.module.Module;
import net.b0at.api.event.Subscribe;
import net.b0at.api.event.types.EventType;
import net.minecraft.network.play.client.CPacketEntityAction;
import net.minecraft.network.play.client.CPacketPlayer;

public class Phase extends Module {
    private boolean zoomies = true;
    public Phase() {
        super("Phase", Category.EXPLOITS, 0xff50ff50);
    }

    @Subscribe
    public void onUpdate(UpdateEvent event) {
        if (getMc().world == null || getMc().player == null || event.getEventType() == EventType.POST) return;
        final float[] dirSpeed = getDirectionalSpeed((zoomies ? 0.0225f : 0.0224f));
        getMc().player.connection.sendPacket(new CPacketPlayer.PositionRotation(getMc().player.posX + dirSpeed[0], getMc().player.posY + (getMc().gameSettings.keyBindJump.isKeyDown() ? (zoomies ? 0.0625 : 0.0624) : 0.00000001) - (getMc().gameSettings.keyBindSneak.isKeyDown() ? (zoomies ? 0.0625 : 0.0624) : 0.00000002), getMc().player.posZ+ dirSpeed[1], getMc().player.rotationYaw, getMc().player.rotationPitch, false));
        getMc().player.connection.sendPacket(new CPacketPlayer.PositionRotation(getMc().player.posX, -1337, getMc().player.posZ, getMc().player.rotationYaw, getMc().player.rotationPitch, true));
        getMc().player.connection.sendPacket(new CPacketEntityAction(getMc().player, CPacketEntityAction.Action.START_FALL_FLYING));
        getMc().player.setPosition(getMc().player.posX+ dirSpeed[0], getMc().player.posY + (getMc().gameSettings.keyBindJump.isKeyDown() ? (zoomies ? 0.0625 : 0.0624) : 0.00000001) - (getMc().gameSettings.keyBindSneak.isKeyDown() ? (zoomies ? 0.0625 : 0.0624) : 0.00000002), getMc().player.posZ+ dirSpeed[1]);
        zoomies = !zoomies;
        getMc().player.motionX = getMc().player.motionY = getMc().player.motionZ = 0;
        getMc().player.noClip = zoomies;
    }

    @Subscribe
    public void onPush(PushEvent event) {
        event.setCancelled(true);
    }

    @Subscribe
    public void onBoundingBox(BoundingBoxEvent event) {
        if (!zoomies)
        event.setAabb(null);
    }

    private float[] getDirectionalSpeed(final float speed) {
        float forward = getMc().player.movementInput.moveForward;
        float side = getMc().player.movementInput.moveStrafe;
        float yaw = getMc().player.prevRotationYaw + (getMc().player.rotationYaw - getMc().player.prevRotationYaw) * getMc().getRenderPartialTicks();
        if (forward != 0.0f) {
            if (side > 0.0f) {
                yaw += ((forward > 0.0f) ? -45 : 45);
            } else if (side < 0.0f) {
                yaw += ((forward > 0.0f) ? 45 : -45);
            }
            side = 0.0f;
            if (forward > 0.0f) {
                forward = 1.0f;
            } else if (forward < 0.0f) {
                forward = -1.0f;
            }
        }
        final float sin = (float) Math.sin(Math.toRadians(yaw + 90.0f));
        final float cos = (float) Math.cos(Math.toRadians(yaw + 90.0f));
        final float posX = forward * speed * cos + side * speed * sin;
        final float posZ = forward * speed * sin - side * speed * cos;
        return new float[]{posX, posZ};
    }
}
